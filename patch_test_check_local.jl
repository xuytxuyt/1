
using ApproxOperator, CairoMakie, LinearAlgebra
include("input.jl")

# uÃÑ(x,y,z) = 1.0
# uÃÑ(x,y,z) = 1.0+2x+3y
# ‚àÇuÃÑ‚àÇx(x,y,z) = 2.
# ‚àÇuÃÑ‚àÇy(x,y,z) = 3.
# bÃÑ(x,y,z) = 0.0
uÃÑ(x,y,z) = 1.0+2x+3y+4x^2+5x*y+6y^2+7x^3+8x^2*y+9x*y^2+10y^3
‚àÇuÃÑ‚àÇx(x,y,z) = 2.0+8x+5y+21x^2+16x*y+9y^2
‚àÇuÃÑ‚àÇy(x,y,z) = 3.0+5x+12y+8x^2+18x*y+30y^2
bÃÑ(x,y,z) = -20.0-60x-76y
# uÃÑ(x,y,z) = 10x^2+9x*y+8y^2
# ‚àÇuÃÑ‚àÇx(x,y,z) = 20x+9y
# ‚àÇuÃÑ‚àÇy(x,y,z) = 9x+16y
# bÃÑ(x,y,z) = -36.0
# uÃÑ(x,y,z) = 0.5*x^2 + 2x*y + 3y^2
# ‚àÇuÃÑ‚àÇx(x,y,z) = x + 2y
# ‚àÇuÃÑ‚àÇy(x,y,z) = 2x + 6y
# bÃÑ(x,y,z) = -7.
# uÃÑ(x,y,z) = 7x^3+8x^2*y+9x*y^2+10y^3
# ‚àÇuÃÑ‚àÇx(x,y,z) = 21x^2+16x*y+9y^2
# ‚àÇuÃÑ‚àÇy(x,y,z) = 8x^2+18x*y+30y^2
# bÃÑ(x,y,z) = -60x-76y

ops = [
    Operator{:‚à´‚à´‚àáv‚àáudxdy}(:k=>1.0),
    Operator{:‚à´vbdŒ©}(),
    Operator{:‚à´vtdŒì}(),
    Operator{:‚à´v·µ¢n·µ¢uds}(:k=>-1.0),
    Operator{:‚à´v·µ¢n·µ¢uds}(:k=>1.0),
    Operator{:‚à´v·µ¢n·µ¢gds}(:k=>1.0),
    Operator{:‚à´vgdŒì}(:Œ±=>1e7),
    Operator{:‚à´uds}(),
]
op_debug = Operator{:‚à´vtdŒì_debug}()

elements, ùìë = import_tr("./msh/square_2.msh")
n‚Çö = 16
n‚Çö‚ÇÅ = n‚Çö

# index = [2,3,4,5]
index = [2,3,7,9,11,12,15,16]
# index = [2,3,7,11,15,17,19,30,32,43,45,46,49,52,55,56]

set‚àáùù≠!(elements["Œ©"])
setùù≠!(elements["Œ©"])
set‚àáùù≠!(elements["Œì·µç"])
setùù≠!(elements["Œì·µç"])
set‚àáùù≠!(elements["Œì"])
setùù≠!(elements["Œì"])

prescribe!(elements["Œì·µç"],:g=>uÃÑ)
prescribe!(elements["‚àÇŒ©"],:u=>uÃÑ)
prescribe!(elements["Œ©"],:b=>bÃÑ)
prescribe!(elements["Œì"],:g=>uÃÑ)
prescribe!(elements["Œì"],:t=>(x,y,z,n‚ÇÅ,n‚ÇÇ)->‚àÇuÃÑ‚àÇx(x,y,z)*n‚ÇÅ + ‚àÇuÃÑ‚àÇy(x,y,z)*n‚ÇÇ)

u = ops[8](elements["‚àÇŒ©"])

k = zeros(n‚Çö,n‚Çö)
f = zeros(n‚Çö)
f‚Çú = zeros(n‚Çö)
ops[1](elements["Œ©"],k)
ops[2](elements["Œ©"],f)
ops[3](elements["Œì"],f‚Çú)

for i in index
    f .-= k[:,i]*u[i]
    k[:,i] .= 0.
    k[i,:] .= 0.
    k[i,i] = 1.
    f[i] = u[i]
end

d = k\f
# println(norm(d-u)/n‚Çö)

k = zeros(n‚Çö,n‚Çö)
f = zeros(n‚Çö)
f‚Çú = zeros(n‚Çö)
# ops[1](elements["Œ©"][1:2],k)
# ops[2](elements["Œ©"][1:2],f)
# ops[3](elements["Œì"][[1,2,3,4,5,7]],f‚Çú)
ops[1](elements["Œ©"][1:1],k)
ops[2](elements["Œ©"][1:1],f)
ops[3](elements["Œì"][[1,3,4]],f‚Çú)

println(norm(k*u-f-f‚Çú))
println(k*d-f)
u‚ÇÅ = u
d‚ÇÅ = d
k‚ÇÅ = k
f‚ÇÅ = f
f‚Çú‚ÇÅ = f‚Çú


elements, ùìë = import_tr("./msh/square_4.msh")
n‚Çö = 56
n‚Çö‚ÇÇ = n‚Çö

# index = [2,3,4,5]
# index = [2,3,7,9,11,12,15,16]
index = [2,3,7,11,15,17,19,30,32,43,45,46,49,52,55,56]

set‚àáùù≠!(elements["Œ©"])
setùù≠!(elements["Œ©"])
set‚àáùù≠!(elements["Œì·µç"])
setùù≠!(elements["Œì·µç"])
set‚àáùù≠!(elements["Œì"])
setùù≠!(elements["Œì"])

prescribe!(elements["Œì·µç"],:g=>uÃÑ)
prescribe!(elements["‚àÇŒ©"],:u=>uÃÑ)
prescribe!(elements["Œ©"],:b=>bÃÑ)
prescribe!(elements["Œì"],:g=>uÃÑ)
prescribe!(elements["Œì"],:t=>(x,y,z,n‚ÇÅ,n‚ÇÇ)->‚àÇuÃÑ‚àÇx(x,y,z)*n‚ÇÅ + ‚àÇuÃÑ‚àÇy(x,y,z)*n‚ÇÇ)

u = ops[8](elements["‚àÇŒ©"])

k = zeros(n‚Çö,n‚Çö)
f = zeros(n‚Çö)
f‚Çú = zeros(n‚Çö)
ops[1](elements["Œ©"],k)
ops[2](elements["Œ©"],f)
ops[3](elements["Œì"],f‚Çú)

for i in index
    f .-= k[:,i]*u[i]
    k[:,i] .= 0.
    k[i,:] .= 0.
    k[i,i] = 1.
    f[i] = u[i]
end

d = k\f
# println(norm(d-u)/n‚Çö)

k = zeros(n‚Çö,n‚Çö)
f = zeros(n‚Çö)
f‚Çú = zeros(n‚Çö)
# ops[1](elements["Œ©"][[1:4...,9:12...]],k)
# ops[2](elements["Œ©"][[1:4...,9:12...]],f)
# ops[3](elements["Œì"][[1:14...,29:32...,34:38...,40]],f‚Çú)
ops[1](elements["Œ©"][[1,2,3,9]],k)
ops[2](elements["Œ©"][[1,2,3,9]],f)
ops[3](elements["Œì"][[1,2,3,4,5,6,7,8,9,11,29,31]],f‚Çú)

println(norm(k*u-f-f‚Çú))
println(k*d-f)
u‚ÇÇ = u
d‚ÇÇ = d
k‚ÇÇ = k
f‚ÇÇ = f
f‚Çú‚ÇÇ = f‚Çú

println((u‚ÇÇ[6]+u‚ÇÇ[18])/2 - u‚ÇÅ[1])

# k‚ÇÅ = k‚ÇÅ[1,:]
# f‚ÇÅ = f‚ÇÅ[1]
# f‚Çú‚ÇÅ = f‚Çú‚ÇÅ[1]
# k‚ÇÇ = (k‚ÇÇ[6,:]+k‚ÇÇ[18,:])/2
# f‚ÇÇ = (f‚ÇÇ[6]+f‚ÇÇ[18])/2
# f‚Çú‚ÇÇ = (f‚Çú‚ÇÇ[6]+f‚Çú‚ÇÇ[18])/2
# println(k‚ÇÅ'*u‚ÇÅ-f‚ÇÅ-f‚Çú‚ÇÅ)
# println(k‚ÇÅ'*d‚ÇÅ-f‚ÇÅ)
# println(k‚ÇÇ'*u‚ÇÇ-f‚ÇÇ-f‚Çú‚ÇÇ)
# println(k‚ÇÇ'*d‚ÇÇ-f‚ÇÇ)
# c‚ÇÅ_ = f‚Çú‚ÇÅ
# c‚ÇÇ_ = f‚Çú‚ÇÇ
# c‚ÇÅ = c‚ÇÅ_/(c‚ÇÅ_-c‚ÇÇ_)
# c‚ÇÇ = c‚ÇÇ_/(c‚ÇÅ_-c‚ÇÇ_)
# println(c‚ÇÅ)
# println((k‚ÇÇ'*u‚ÇÇ-f‚ÇÇ)*c‚ÇÅ - (k‚ÇÅ'*u‚ÇÅ-f‚ÇÅ)*c‚ÇÇ)
# println((k‚ÇÇ'*d‚ÇÇ-f‚ÇÇ)*c‚ÇÅ - (k‚ÇÅ'*d‚ÇÅ-f‚ÇÅ)*c‚ÇÇ)
# k = zeros(n‚Çö‚ÇÇ)
# k .= k‚ÇÇ*c‚ÇÅ
# k[2] -= k‚ÇÅ[2]/2*c‚ÇÇ
# k[3] -= k‚ÇÅ[3]/2*c‚ÇÇ
# k[6] -= k‚ÇÅ[1]/2*c‚ÇÇ
# k[7] -= k‚ÇÅ[2]/2*c‚ÇÇ
# k[9] -= k‚ÇÅ[5]/2*c‚ÇÇ
# k[18] -= k‚ÇÅ[1]/2*c‚ÇÇ
# k[19] -= k‚ÇÅ[3]/2*c‚ÇÇ
# k[20] -= k‚ÇÅ[4]/2*c‚ÇÇ
# k[23] -= k‚ÇÅ[4]/2*c‚ÇÇ
# k[24] -= k‚ÇÅ[5]/2*c‚ÇÇ
# f = f‚ÇÇ*c‚ÇÅ-f‚ÇÅ*c‚ÇÇ
# println(k'*u‚ÇÇ-f)
# d = zeros(n‚Çö‚ÇÇ)
# d .= d‚ÇÇ
# d[2] -= 
# println(k'*d‚ÇÇ-f)

# f‚Çú‚ÇÅ = f‚Çú‚ÇÅ[1]
# f‚Çú‚ÇÇ = (f‚Çú‚ÇÇ[6]+f‚Çú‚ÇÇ[18])/2
# f‚Çú‚ÇÅ = f‚Çú‚ÇÅ[2]
# f‚Çú‚ÇÇ = (f‚Çú‚ÇÇ[2]+f‚Çú‚ÇÇ[7])/2
# f‚Çú‚ÇÅ = f‚Çú‚ÇÅ[3]
# f‚Çú‚ÇÇ = (f‚Çú‚ÇÇ[3]+f‚Çú‚ÇÇ[19])/2
# c‚ÇÅ_ = f‚Çú‚ÇÅ
# c‚ÇÇ_ = f‚Çú‚ÇÇ
# c‚ÇÅ = c‚ÇÅ_/(c‚ÇÅ_-c‚ÇÇ_)
# c‚ÇÇ = c‚ÇÇ_/(c‚ÇÅ_-c‚ÇÇ_)
# println(c‚ÇÅ)

println(sum(f‚Çú‚ÇÅ)-sum(f‚Çú‚ÇÇ))
# println((f‚Çú‚ÇÇ[1]+f‚Çú‚ÇÇ[4]+f‚Çú‚ÇÇ[5]+f‚Çú‚ÇÇ[6]+f‚Çú‚ÇÇ[18])/f‚Çú‚ÇÅ[1])
# println((f‚Çú‚ÇÇ[2]+f‚Çú‚ÇÇ[7])/f‚Çú‚ÇÅ[2])
# println((f‚Çú‚ÇÇ[3]+f‚Çú‚ÇÇ[19])/f‚Çú‚ÇÅ[3])
# println(sum(f‚Çú‚ÇÇ[[5,6,7]])/sum(f‚Çú‚ÇÅ))
# println(sum(f‚Çú‚ÇÇ[[1,5,4]])/sum(f‚Çú‚ÇÅ))
# println(sum(f‚Çú‚ÇÇ[[1,2,3]])/sum(f‚Çú‚ÇÅ))
# println(sum(f‚Çú‚ÇÇ[[4,18,19]])/sum(f‚Çú‚ÇÅ))

# println((f‚Çú‚ÇÇ[1]+f‚Çú‚ÇÇ[6]+f‚Çú‚ÇÇ[18]-f‚ÇÇ[6]-f‚ÇÇ[8])/(f‚Çú‚ÇÅ[1]-f‚ÇÅ[1]))
println(f‚Çú‚ÇÅ[1]-f‚Çú‚ÇÇ[1]-f‚Çú‚ÇÇ[6]-f‚Çú‚ÇÇ[18])
println(f‚Çú‚ÇÅ[2]-f‚Çú‚ÇÇ[2]-f‚Çú‚ÇÇ[4]-f‚Çú‚ÇÇ[7])
println(f‚Çú‚ÇÅ[3]-f‚Çú‚ÇÇ[3]-f‚Çú‚ÇÇ[5]-f‚Çú‚ÇÇ[19])